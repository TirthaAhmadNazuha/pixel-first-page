const n=class{constructor(e){this.cacheName=e,this.cache=caches.open(e)}async add(e){(await this.cache).add(e)}async find(e){const t=await(await this.cache).match(e);return t||!1}},s=new n("static-V2");self.addEventListener("install",()=>{console.log("Installing skiped"),self.skipWaiting()});self.addEventListener("activate",()=>{console.log("activate..."),setTimeout(async()=>{const c=(await caches.keys()).filter(t=>!t.endsWith(2 .toString()));c.length>0&&(console.log("oldCacheKey: ",c),c.forEach(t=>{caches.delete(t)}))})});let a=1e3;const o=async e=>{const c=await s.find(e);if(c)return console.log("respond cache"),c;const t=await fetch(e);if(t.ok)return console.log("respond fetch"),setTimeout(()=>{console.log("adding request to cache"),s.add(e)},a),a+=200,t};self.addEventListener("fetch",e=>{e.respondWith(o(e.request))});
